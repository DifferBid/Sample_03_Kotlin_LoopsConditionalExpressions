
package org.example

fun main() {

    /**-----Example 01-----*/
    // Простейший пример вложенных циклов

    // В этом примере внешний цикл проходит по значениям x от 1 до 3,
    // а внутренний цикл проходит по значениям y от 1 до 3 для каждого значения x.
    // Это приводит к тому, что комбинация значений x и y выводится на экран.

    // первый цикл
    for (x in 1..3) {
        // второй вложенный цикл
        for (y in 1..3) {
            print("$x $y \n")
            // 1 1
            // 1 2
            // 1 3
            // 2 1
            // 2 2
            // 2 3
            // 3 1
            // 3 2
            // 3 3
        }
    }

    /**-----Example 02-----*/
    // Досрочное завершение вложенных циклов

    // Иногда необходимо досрочно завершить выполнение циклов при определенных условиях.
    // В Kotlin это можно сделать с помощью меток и команды break или continue

    // Если мы хотим досрочно прервать на каком-то этапе цикл, то можем добавить аннотацию outerLoop@ к первому циклу и внутри второго цикла вызвать break@outerLoop.
    // Как только значения станут равными (2 2), цикл завершится досрочно.

    // Метка outerLoop@ присвоена внешнему циклу.
    // Внутри внутреннего цикла проверяется условие if (x == 2 && y == 2).
    // Если условие истинно, используется команда break@outerLoop для досрочного завершения работы обоих циклов.
    // Это позволяет выйти из обоих циклов сразу, как только достигается комбинация x = 2 и y = 2.

    // первый цикл
    outerLoop@ for (x in 1..3) {
        // второй вложенный цикл
        for (y in 1..3) {
            print("$x $y \n")
            if (x == 2 && y == 2) {
                break@outerLoop
            }
        }
        // 1 1
        // 1 2
        // 1 3
        // 2 1
        // 2 2
    }
}